---

- name: AWS - Create EC2 Instance
  vars_files:
    - vars/sec_vars.yml
    - vars/deployment_vars.yml
    - vars/deployment_output_vars.yml
    - vars/aws_template_vars.yml
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Shell timestamp for unique profile name
      shell: |
        echo $(date '+%Y%m%d-%H%M%s')
      register: time_stamp
    - name: create subnet
      include_tasks:
        file: tasks/subnet.yml
      when: subnet_id is not defined 

    - name: Create node communication security group
      import_tasks:
        file: tasks/sg_create_web.yml

    - name: import S3 and ECR creation task
      import_tasks:
        file: tasks/s3_create_policy.yml

    - name: EC2 Assume Role exists/create
      import_tasks:
        file: tasks/assume_role_create.yml

    - name: Instance Profile(s) loop create
      import_tasks:
        file: tasks/instance_profile_create.yml

    - name: Create Apache instance
      import_tasks:
        file: tasks/create_apache_instance.yml

    - name: Deployment Record Update Apache Private IP
      lineinfile:
        state: present
        create: true
        path: "{{ deployment_log }}"
        regexp: 'test1_priv_ip:'
        line: "test1_priv_ip: {{ ec2['instances'][0]['network_interfaces'][0]['private_ip_address'] }}"

    - name: Update deployment inventory.yml
      shell: |
        php "{{ script_path }}/update_inventory.php" "{{ groups }}"
      ignore_errors: true
      register: php_output
    - debug:
        msg: "{{ php_output.stdout }}"


- name: Basic ubuntu server setup
  ansible.builtin.import_playbook: ubuntu_server_setup.yml

- name: Firewall setup           
  ansible.builtin.import_playbook: firewall.yml

