#######################################################>
###>  Ubuntu basic settings
#######################################################>
- name: Initial server setup tasks
  hosts: ec2hosts
  gather_facts: false
#  vars_prompt:
#    - name: password
#      prompt: Please provide creation password for "{{ my_user }}".
  vars_files:
    - vars/sec_vars.yml
    - vars/deployment_vars.yml

  tasks:
    - name: Wait for SSH
      import_tasks:
        file: tests/ssh_response.yml

    - name: Define prefered timezone
      become: true
      community.general.timezone:
        name: "{{ my_timezone }}"

    - name: Local groups
      import_tasks:
        file: tasks/local_groups.yml


    - name: Create a user with sudo privileges
      become: true
      ansible.builtin.user:
        name: "{{ my_user }}"
        state: present
        groups: 
          - sudo
          - adm
          - docker
          - "{{ ssh_group }}"
        append: true
        create_home: true
        shell: /bin/bash
        password: "{{ lookup('ansible.builtin.env', 'MY_PASS') }}"
        update_password: on_create

    - name: Add ubuntu user to the allowed group
      become: true
      ansible.builtin.shell:
        usermod -a -G "{{ ssh_group }}" ubuntu

    - name: Set authorized key for remote user
      become: true
      ansible.posix.authorized_key:
        user: "{{ my_user }}"
        state: present
        key: "{{ copy_local_key }}"

    - name: Grant SUDO access
      become: true
      ansible.builtin.shell: |
        echo '{{ my_user }} ALL=(ALL) NOPASSWD:ALL'  >> '/tmp/01-{{ my_user }}-full'
        cp -f '/tmp/01-{{ my_user }}-full'  '/etc/sudoers.d/01-{{ my_user }}-full'

    - name: Disable remote login for root
      become: true
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^PermitRootLogin yes'
        line: 'PermitRootLogin no'

    - name: Configure SSH AllowGroups
      become: true
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        line: 'AllowGroups "{{ ssh_group }}"'
        insertafter: '#VersionAddendum none'

    - name: Install packages
      import_tasks:
        file: tasks/package1.yml

    - name: Remove excess packages no longer needed
      become: true
      ansible.builtin.apt:
        autoremove: yes

    - name: Reboot all hosts
      become: true
      ansible.builtin.reboot:
